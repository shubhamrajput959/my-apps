{"version":3,"sources":["component/Navbar.js","component/Textbox.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aria-labelledby","tabindex","aria-disabled","placeholder","onClick","toggle","for","Textbox","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","modetext","setmodeText","_useState5","fontWeight","_useState6","btext","setbText","_useState7","color","backgroundColor","_useState8","style","setStyle","Fragment","classname","hname","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","navigator","clipboard","writeText","split","length","App","setMode","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ebc7ef1e.chunk.js","sourcesContent":["// rfc is a react function based componenet\r\nimport React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n                  <nav className={`navbar navbar-expand-lg navbar-light bg-${props.mode}`}>\r\n                  <div className=\"container-fluid\"> \r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                      <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a className=\"nav-link\" href=\"/\">Link</a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            Dropdown\r\n                          </a>\r\n                          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                            <li><hr className=\"dropdown-divider\"/></li>\r\n                            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                          </ul>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a className=\"nav-link disabled\" href=\"/\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                        </li>\r\n                      </ul>\r\n                      <form className=\"d-flex\">\r\n                        <input className=\"form-control me-\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                        <button className=\"btn btn-outline-success mx-5\" type=\"submit\">Search</button>\r\n                      </form>\r\n                    </div>\r\n                    <div className={`form-check form-switch text-${props.mode === \"light\"?'dark':'light'}`}>\r\n  <input className=\"form-check-input vetical-align-center\" type=\"checkbox\" onClick={props.toggle} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" for=\"flexSwitchCheckDefault\">change mode</label>\r\n</div>\r\n\r\n                  </div>\r\n        \r\n                </nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textbox(props) {\r\n                  const changeText = (event)=>{\r\n                                    setText(event.target.value)             \r\n                  }\r\n                  const convertUper = ()=>{\r\n                                    const newText = text.toUpperCase();\r\nsetText(newText);\r\n                  }\r\n                  const convertLower = ()=>{\r\n                                    const newText = text.toLowerCase();\r\nsetText(newText);\r\n                  }\r\n                  const cleartext = ()=>{\r\n                                    const newText = '';\r\nsetText(newText);\r\n                  }\r\n                  const makebold = ()=>{\r\n                    if(style.fontWeight !== 'bold'){\r\n                                 setStyle({\r\n                                  fontWeight: 'bold'\r\n                                 }) \r\n                                 setbText({\r\n                                  fontWeight : 'changeToNormal'\r\n                                 });\r\n                                 \r\n                                }\r\n                                 else{\r\n                                  setStyle({\r\n                                    fontWeight: 'normal'\r\n                                   }) \r\n                                   setbText({\r\n                                    fontWeight : 'changeToBold'\r\n                                   });\r\n\r\n                                 }\r\n                    }\r\n                    const copy = ()=>{\r\n                      const text = document.getElementById('textbox').value;\r\n                      navigator.clipboard.writeText(text);\r\n                      \r\n\r\n    }\r\n\r\n                  const  changeMode = ()=>{\r\n                    if(style.backgroundColor  === 'white'){\r\n                      setStyle({\r\n                        color: 'red',\r\n                        backgroundColor: 'black'\r\n                      })\r\n                      setmodeText(\"light mode\")\r\n                    }\r\n                    else{\r\n                      setStyle({\r\n                        color: 'black',\r\n                        backgroundColor: 'white'\r\n                      })\r\n                      \r\n                        setmodeText(\"dark mode\")\r\n\r\n                       \r\n                    }\r\n                   }\r\n              \r\n                  const [text, setText] = useState(\"enter your text\");\r\n                  const [modetext, setmodeText] = useState(\"dark mode\");\r\n\r\n                  \r\n                  const [btext, setbText] = useState({\r\n                    fontWeight : 'makebold',\r\n                    \r\n                  });\r\n                    \r\n                   \r\n\r\n                  const [style, setStyle] = useState({\r\n                    color: '',\r\n                    backgroundColor: ''\r\n                    \r\n                    \r\n                  });\r\n                 \r\n\r\n  return (\r\n                  <>\r\n    <div classname='container'>\r\n      <div >\r\n                  <h1>{props.hname}</h1>\r\n  <textarea className=\" mt-3 form-control border\"  style = {style}  value={text} onChange={changeText} id=\"textbox\"  rows=\"8\"></textarea>\r\n  <button className='btn btn-primary m-2' onClick={convertUper}>changeToUpper</button>\r\n  <button className='btn btn-primary m-2' onClick={convertLower}>changeToLower</button>\r\n  <button className='btn btn-primary m-2' onClick={makebold}>{btext.fontWeight}</button>\r\n  <button className='btn btn-primary m-2' onClick={cleartext}>cleartext</button>\r\n  <button className='btn btn-primary m-2' onClick={changeMode}>{modetext}</button>\r\n  <button className='btn btn-primary m-2' onClick={copy}>copy</button>\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n</div>\r\n    </div>\r\n    <div className=\"container \">\r\n                  <h1 >text summary</h1>\r\n                  <p>{text.split(\" \").length} words and {text.length} character</p>\r\n                  <p>time to read the text : {.2 * text.split(\" \").length}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Textbox from './component/Textbox';\nimport React, {useState} from 'react'\n\n\n\n\n\nfunction App() {\nconst [mode, setMode] = useState(\"light\");\n\n\nconst toogle = ()=>{\n  if(mode === \"dark\"){\n    setMode(\"light\")\n  }\n  else{\n    \n      setMode(\"dark\")\n    \n  }\n  }\n\n\n\n\n  return (\n    \n    <div className=\"App\">\n     \n     \n<Navbar title=\"one\" mode={mode} toggle={toogle}/>\n\n<Textbox hname=\"Enter any text to evalute\"/>\n\n\n\n\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n \nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}